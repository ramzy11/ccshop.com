<?php
/**
 * Magento
*
* NOTICE OF LICENSE
*
* This source file is subject to the Academic Free License (AFL 3.0)
* that is bundled with this package in the file LICENSE_AFL.txt.
* It is also available through the world-wide-web at this URL:
* http://opensource.org/licenses/afl-3.0.php
* If you did not receive a copy of the license and are unable to
* obtain it through the world-wide-web, please send an email
* to license@magentocommerce.com so we can send you a copy immediately.
*
* DISCLAIMER
*
* Do not edit or add to this file if you wish to upgrade Magento to newer
* versions in the future. If you wish to customize Magento for your
* needs please refer to http://www.magentocommerce.com for more information.
*
* @category    design
* @package     base_default
* @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
* @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
*/

/**
 * Product view template
*
* @see Mage_Catalog_Block_Product_View
*/
/* @var $this Gri_CatalogCustom_Block_Product_View */
/* @var $_helper Mage_Catalog_Helper_Output */
/* @var $griSalesHelper Gri_Sales_Helper_Data */
/* @var $_product Gri_CatalogCustom_Model_Product */
$griSalesHelper = Mage::helper('gri_sales');
/* @var $productHelper Gri_CatalogCustom_Helper_Product */
$productHelper = Mage::helper('gri_catalogcustom/product');
?>
<?php $_helper =  $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct();
$brand = Mage::registry('brand_category') ? Mage::registry('brand_category')->getUrlKey() : '';
$saleable = $_product->isSaleable() || Mage::helper('cataloginventory')->isShowOutOfStock();
?>
<?php echo $this->getChildHtml('flash.sale.config'); ?>
<?php echo $this->getChildHtml('simple.price.config'); ?>
<script type="text/javascript">
    var optionsPrice<?php echo $_product->getId(); ?> = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view<?php echo $_product->getId(); ?>"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>
<div class="product-view <?php echo $_product->getTypeId(); ?>-product">
    <div class="product-essential clearer">
    <?php if ($_product->getTypeId() != Mage_Catalog_Model_Product_Type::TYPE_GROUPED) { ?>
    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" target="_parent" id="product_addtocart_form-<?php echo $_product->getId(); ?>"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <div class="no-display">
            <input type="hidden" name="from_brand_page" value="<?php echo $brand; ?>" />
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
    <?php } ?>

        <div class="product-img-box">
            <?php echo $this->getChildHtml('media') ?>
            <div class="ribbons">
                <?php if ($classes = $productHelper->getRibbonClass($_product)) { ?>
                <div class="<?php echo str_replace('special_offer', 'on-sale', implode(' ', $classes)); ?>" <?php if (Mage::registry('remove_unavailable_products') && in_array('sold-out-ribbon', $classes)) { ?>style="display:inline-block!important;" <?php } ?>><?php echo $this->__($productHelper->getRibbonLabel($_product)); ?></div>
                <?php } ?>
            </div>
        </div>
        <div class="product-detail-right">
            <div class="product-detail">
                <?php echo $this->getChildHtml('look.product.navigate') ?>
                <div class="product-shop">
                    <div class="product-brand">
                        <?php echo $_helper->productAttribute($_product, $_product->getAttributeText('brand'), 'brand') ?>
                    </div>
                    <div class="product-name">
                        <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                    </div>

                    <?php if($_product->getData('limited_edition')): ?>
                        <div class="limited">
                            <h1>- <?php echo $this->__('Limited Edition');?> -</h1>
                        </div>
                    <?php endif; ?>
                    <?php if($_product->getIsFlashSale()): ?>
                        <div class="flash-sale">
                            <h1>- <?php echo $this->__('Flash Sale');?> -</h1>
                        </div>
                    <?php endif; ?>

                    <?php echo $this->getChildHtml('alert_urls') ?>
                    <?php if ($_product->getTypeId() != 'grouped') { ?>
                        <?php echo $this->getChildHtml('product_type_data') ?>
                    <?php } ?>
                    <?php echo $this->getTierPriceHtml() ?>
                    <?php echo $this->getChildHtml('extrahint') ?>
                    <?php echo $griSalesHelper->displayCartRuleInProductView(); ?>
                    <?php if ($_product->getTypeId() == 'grouped') { ?>
                        <div class="add-to-box">
                            <?php echo $this->getChildHtml('addto') ?>
                        </div>
                        <?php echo $this->getChildHtml('product_type_data') ?>
                    <?php } ?>

                    <?php if (!$this->hasOptions() && $_product->getTypeId()!='grouped'):?>
                        <div class="add-to-box">
                            <?php if($_product->isSaleable()): ?>
                                <?php echo $this->getChildHtml('addtocart') ?>
                            <?php endif; ?>
                        </div>
                        <?php echo $this->getChildHtml('extra_buttons') ?>
                    <?php elseif (!$saleable && $_product->getTypeId() != 'grouped'): ?>
                        <!--<div class="add-to-box">
                            <?php /*echo $this->getChildHtml('addto') */?>
                        </div>-->
                    <?php endif; ?>

                    <?php echo $this->getChildHtml('other');?>

                    <?php if ($saleable && $this->hasOptions()):?>
                        <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                    <?php endif;?>
                </div>
                <?php if ($saleable && $this->hasOptions()):?>
                    <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
                <?php endif;?>

                <div class="product-fulldetail">
                    <a href="<?php echo $this->getProductUrl($_product);?>" target="_parent"><?php echo $this->__('View Full Details')?></a>
                </div>

                <!--Free Gift & available-->
                <?php echo $this->getChildHtml('product.info.freegiftandavailable', false); ?>
            </div>

        </div>
    <?php if (!$_product->isGrouped()) { ?>
    </form>
    <script type="text/javascript">
    //<![CDATA[
    var productAddToCartForm<?php echo $_product->getId(); ?> = new VarienForm('product_addtocart_form-<?php echo $_product->getId(); ?>');
    productAddToCartForm<?php echo $_product->getId(); ?>.submit = function(button, url) {
        if (this.validator.validate()) {
            var form = this.form,
                oldUrl = form.action,
                productId = '<?php echo $_product->getId(); ?>',
                addToCartBtn = _('#add_to_cart_' + productId),
                ajaxLoader = _('#ajax_loader' + productId);
            if (url) {
                form.action = url;
            }
            var e = null;
            // Ajax for quickshop
            if (!url) {
                url = oldUrl;
            }
            url = url.replace("checkout/cart","ajax/index"); // New Code
            var data = _(form).serialize();
            data += '&isAjax=1';
            ajaxLoader.show();
            try {
                addToCartBtn.prop('disabled', true);
                _.ajax({
                    url : url,
                    dataType : 'json',
                    type : 'post',
                    cache: false,
                    data : data,
                    success : function(data) {
                        ajaxLoader.hide();
                        addToCartBtn.prop('disabled', false);
                        if(data.topCart){
                            var obj = _('.header .top-cart-container');//pc
                            obj.replaceWith(data.topCart);
                            parent.changeTopCart(data.topCart);
                        }

                        if(data.topCartSwipe){
                            var obj = _('.top-icon-menu .top-cart-container');//mobile
                            obj.replaceWith(data.topCartSwipe);
                            parent.changeTopCartSwipe(data.topCartSwipe);
                        }

                        var messageBlock = _("#add-to-message" + productId).html(data.message).addClass('add-to-message').show();
                        setTimeout(function(){
                            messageBlock.fadeOut();
                        }, 2000);

                    }
                });
            } catch (e) {
                addToCartBtn.prop('disabled', false);
            }
            this.form.action = oldUrl;
            if (e) {
                throw e;
            }
        }
    }.bind(productAddToCartForm<?php echo $_product->getId(); ?>);

    productAddToCartForm<?php echo $_product->getId(); ?>.submitLight = function(button, url){
        if(this.validator) {
            var nv = Validation.methods;
            delete Validation.methods['required-entry'];
            delete Validation.methods['validate-one-required'];
            delete Validation.methods['validate-one-required-by-name'];
            // Remove custom datetime validators
            for (var methodName in Validation.methods) {
                if (methodName.match(/^validate-datetime-.*/i)) {
                    delete Validation.methods[methodName];
                }
            }

            if (this.validator.validate()) {
                if (url) {
                    this.form.action = url;
                }
                this.form.submit();
            }
            Object.extend(Validation.methods, nv);
        }
    }.bind(productAddToCartForm<?php echo $_product->getId(); ?>);
    //]]>
    </script>
    <?php } ?>
    </div>

    <div class="product-collateral">
        <?php if (!$_product->isGrouped() && !$productHelper->isGift($_product)) { ?>
        <div class="rec_item clearer">
            <?php echo $this->getChildHtml('upsell_products') ?>
        </div>
        <?php } ?>
        <?php echo $this->getChildHtml('product_additional_data') ?>
        <?php echo $this->getChildHtml('products.otherlook')?>
    </div>
</div>
<script type="text/javascript">
    jQuery(document).ready(function() {
        jQuery('select').selectBox();
    })
</script>